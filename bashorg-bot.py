""""
–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç, –ø–æ–∫–∞ —É–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—É—é —Ü–∏—Ç–∞—Ç—É —Å —Å–∞–π—Ç–∞ bashorg.org –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —è?"
–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:
    pyTelegrambotApi
    beautifulsoup4
    lxml
"""

import telebot
from telebot import types
import requests
from bs4 import BeautifulSoup
from token_file import token

bot = telebot.TeleBot(token)
url = "https://xn--80abh7bk0c.xn--p1ai/random"


@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("/random")
    btn2 = types.KeyboardButton("–ö—Ç–æ —Ç—ã?")
    markup.add(btn1, btn2)
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç {0.first_name}! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /random \
            —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—É—é —Ü–∏—Ç–∞—Ç—É'.format(message.from_user), reply_markup=markup)


@bot.message_handler(commands=['random'])
def send_quote(message):

    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–π —Ü–∏—Ç–∞—Ç—ã"""
    print('–ó–∞–ø—Ä–æ—Å –æ—Ç {0.first_name}'.format(message.from_user))  #########
    response = requests.get(url)                                            # –ø–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    soup = BeautifulSoup(response.text, 'lxml')                             # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç html —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    date = soup.find('div', class_='quote__header_date').text.strip()[0:10]  # –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É

    dirty_quote = str(soup.find('div', class_='quote__frame').find('div', class_='quote__body'))  # —Å—Ç—Ä–æ–∫–∞ —Å —Ü–∏—Ç–∞—Ç–æ–π —Å–æ —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–∞–º–∏ –∏ —Å–æ —Å–∫–ª–µ–µ–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏
    quote = dirty_quote.replace("<br/>", "\n").replace('<div class="quote__body">', "").replace("</div>", "")\
        .replace('&lt;', '<').replace('&gt;', '>').strip()  # –≥–æ—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —Ü–∏—Ç–∞—Ç–æ–π

    # quote_old = str(soup.find('div', class_='q').find('div', class_=None))   # –ø–æ–ª—É—á–∞–µ–º —á–∏—Å—Ç—É—é —Ü–∏—Ç–∞—Ç—É –∏–∑ –±–µ–∑—ã–º—è–Ω–Ω–æ–≥–æ div
    # quote = quote_old.replace("<br/>", "\n").replace("<div>", "").replace("</div>", "")  # –ø–æ–ª—É—á–∞–µ–º —Ü–∏—Ç–∞—Ç—É –±–µ–∑ —Å–∫–ª–µ–µ–∫ –∏ —Ç–µ–≥–æ–≤
    answer = date + "\n" + quote
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("/random")
    markup.add(btn1)
    bot.send_message(message.chat.id, answer, reply_markup=markup)
    # print(quote)  #######

@bot.message_handler(content_types=['text'])
def dialog(message):
    if message.text == "–ö—Ç–æ —Ç—ã?":
        bot.reply_to(message, text="–†–∞–¥ —á—Ç–æ —Ç—ã —Å–ø—Ä–æ—Å–∏–ª... –Ø –ë–û–¢! –Ø –≤—ã–≤–æ–∂—É —Å–ª—É—á–∞–π–Ω—É—é \
        —Ü–∏—Ç–∞—Ç—É —Å —Å–∞–π—Ç–∞ –±–∞—à–æ—Ä–≥.—Ä—Ñ. –ü–æ–∫–∞ —è —É–º–µ—é —Ç–æ–ª—å–∫–æ —ç—Ç–æ, –Ω–æ –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç \
        –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –º–æ–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π üòé")
    else:
        bot.send_message(message.chat.id, text="–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª...")


print("Started...")
bot.infinity_polling()
